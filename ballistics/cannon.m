%-------------------------------------------------------------------------------
% Параметры снаряда
%-------------------------------------------------------------------------------

% плотность материала снаряда
global gamma = 7800; 
% коэффициент сопротивления формы (для шара)
global c_f = 0.47;
% калибр
global d = 0.1;

%-------------------------------------------------------------------------------
% Параметры стрельбы
%-------------------------------------------------------------------------------

% Начальная скорость
global v0 = 400;
% Угол наклона ствола пушки (в градусах!)
global alpha = 35;

%-------------------------------------------------------------------------------
%   Расчет точки фазовой траектории для произвольного момента времени
%-------------------------------------------------------------------------------
function Y = MotionOdeSolve(v0, alpha, t)
   
  % Начальные условия
  x0 = 0;
  y0 = 0;
  vx0 = v0 * cos(deg2rad(alpha));
  vy0 = v0 * sin(deg2rad(alpha));
  
  Y0 = [x0; y0; vx0; vy0];
  
  % Решаем ОДУ движения
  solv = lsode("f_air", Y0, [0; t]);
  
  % Формируем вектор фазовых координат для момента времени t
  Y = [solv(2,1); solv(2,2); solv(2,3); solv(2,4)];
  
endfunction

%-------------------------------------------------------------------------------
% Вычисление высоты полета снаряда для произвольного момента времени
%-------------------------------------------------------------------------------
function h = height(t)
  
  global v0;
  global alpha;
  
  Y = MotionOdeSolve(v0, alpha, t);
  
  h = Y(2);
  
endfunction

t1 = 10;
t2 = 20;
printf("h(%f) = %f, h(%f) = %f\n", t1, height(t1), t2, height(t2));

%-------------------------------------------------------------------------------
% Горизонтальное удаление снаряда от позиции стрельбы для произвольного t
%-------------------------------------------------------------------------------
function d = dist(t)
  
  global v0;
  global alpha;
  
  Y = MotionOdeSolve(v0, alpha, t);
  
  d = Y(1);
  
endfunction

%
% Решаем задачу поиска дальности полета снаряда. Следует решить уравнение
%   height(t) = 0
% относительно времени. 
%

% Поиск интервала изоляции корня
t0 = 0;
tend = 100.0;
deltaT = 1.0;

t = t0;

while (height(t) >= 0)
  t = t + deltaT;  
endwhile

b = height(t);
a = height(t - deltaT);

% Первое приближение корня
t1 = t - deltaT / 2;

% Уточняем корень
t_end = fsolve("height", t1);

% Определяем дистанцию стрельбы
d_max = dist(t_end);

printf("Shot distance: %f, m\n", d_max);

%-------------------------------------------------------------------------------
% Вычисление вертикальной проекции вектора скорости
%-------------------------------------------------------------------------------
function v = vy(t)
  
  global v0;
  global alpha;
  
  Y = MotionOdeSolve(v0, alpha, t);
  
  v = Y(4);
  
endfunction

%
% Решаем задачу поиска максимальной высоты подъема снаряда. Следует решить 
% уравнение
%
% vy(t) = 0
%

% Ищем интервал изоляции корня
t = t0;

while (vy(t) >= 0)
  t = t + deltaT;  
endwhile

b = vy(t);
a = vy(t - deltaT);

% Первое приближение корня
t1 = t - deltaT / 2;

% Уточняем корень
t_hmax = fsolve("vy", t1);

% Находим максимальную высоту подъема снаряда
h_max = height(t_hmax);

printf("Maximal height: %f, m\n", h_max);